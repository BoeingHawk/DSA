//Binary Search

function binarySearch(arr, target) {
  let leftIndex = 0;
  let rightIndex = arr.length - 1;

  while(rightIndex >= leftIndex) {
    let middleIndex = Math.floor((leftIndex + rightIndex) / 2);
    
    if (target === arr[middleIndex]) {
      return middleIndex;
    }
    if (target < arr[middleIndex]) {
      rightIndex = middleIndex - 1;
    } else {
      leftIndex = middleIndex + 1;
    }
  }
}

console.log(binarySearch([-5, 2, 4, 6, 10], 10)) //console output: 4


// Time Complexity - BigO = O(log n) 
//Explanation: Because with every iteration, we are reducing the size into half


